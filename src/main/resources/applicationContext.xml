<?xml version="1.0" encoding="utf-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd 
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">



	<!-- 使用 annotation --> 
	<context:annotation-config />
    
	<bean id="configurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:init.properties</value>
		</property>
	</bean> 
	
	<bean id="targetDataSource" class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<bean id="dataSource" class="com.p6spy.engine.spy.P6DataSource">
		<constructor-arg ref="targetDataSource"></constructor-arg>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
				<!--  <prop key="hibernate.hbm2ddl.auto">create</prop>-->
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop> 
			</props>
		</property>
		<property name="packagesToScan" value="com.zufe.pojo" />
	</bean>
 
	<!--开启Spring的自动扫描 注解模式，检查@Controller, @Service, @Repository注解实现注入-->
	<context:component-scan base-package="com.zufe"/> 
	
	<!-- 事务管理器 -->
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		  abstract="false" lazy-init="default" autowire="default">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!--
		事务自动扫描 注解模式 <tx:annotation-driven transaction-manager="txManager"
		proxy-target-class="true"/>
	-->

	<!-- 在service层配置事务 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<aop:config>
		<aop:pointcut id="serviceOperation" expression="execution(* com.zufe.service.*.*(..))" />
		<aop:advisor pointcut-ref="serviceOperation" advice-ref="txAdvice" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	
	<!-- liquibase配置 -->
	<bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
      <property name="dataSource" ref="targetDataSource" />
      <property name="changeLog" value="classpath:db-changelog.xml" />
      <!--
      contexts specifies the runtime contexts to use.
      -->
      <property name="contexts" value="production" />
 	</bean>
</beans>